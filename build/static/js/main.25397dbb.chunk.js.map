{"version":3,"sources":["reducers/rootreducer.js","store.js","actions/index.js","genuserinfo.js","key.js","encrypt.js","keyvalueimplementwithrestfulapi.js","keyvalue.js","util.js","subscriber-publisher.js","ChatWith.js","faceiconarray.js","ChatList.js","AppBar.js","Home.js","InputText.js","ChatingList.js","ChatSurface.js","Router.js","index.js"],"names":["getcombineReducer","combineReducers","usrinfo","state","arguments","length","undefined","action","type","newstate","cloneDeep","id","long","pubkey","info","sending","thesenddic","fromid","time","toid","text","msgstatus","push","forEach","item","msgid","result","received","comparemd5","publicmd5","memd5","md5str","incleantime","viewcleantime","onchatingid","newalert","decryptmsg","msg","lastsendtime","test","rootInitialState","rootReducer","persistConfig","key","storage","persistedReducer","persistReducer","blacklist","store","createStore","persistor","persistStore","commonaction","messageId","uuidv4","currentTime","Date","toISOString","usrInfo","quickUsrInfoId","quickUsrInfoPubkey","sendedMsg","sendingMsg","receivedMsg","receivedPubMsg","inCleanTime","viewCleanTime","cleanSending","cleanReceived","onChatingId","newAlert","newDecryptMsg","lastSendTime","StateClean","genuserinfo","Promise","resolve","reject","Math","floor","random","keypair","NodeRSA","b","publickey","exportKey","privatekey","genkeypair","getDecryptedPass","encryptedPass","rsa","importKey","testkey","localStorage","storedPrivateKey","getItem","privKey","decrypt","toString","encrypt","data","iv","youpubkey","storedPublicKey","pubKey","passAndIv","pass","stringRandom","encryptedpass","getEncryptedPass","encryptedcontent","CryptoJS","AES","getDecryptedMessage","encryptedContent","split","encrypted","enc","Utf8","aesDecrypt","slice","join","encryptedData","restfulurl","process","headers","token","apimethod","getlist","start","stop","axios","get","getlisturl","pushtolist","post","pushlisturl","setkeyjson","setjsonurl","getkeyvalue","getvalueurl","delkey","delkeyurl","getList","then","catch","err","getA_not_in_B","A","B","keyname","filter","itemA","some","itemB","itemInList","theitem","list","getState","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","rval","handle","complete","finish","delegateYield","subscribeChannel","channel","_ref","_asyncToGenerator","_callee","clist","infolist","localdecryptdic","decryptlist","_context","Number","map","itemstr","JSON","parse","enmsg","decryptedmsg","dispatch","decryptedlocalmsg","_x","_x2","apply","subscribeChannelOne","oneindex","getchannelpubkey","_ref2","_callee2","cinfostr","cinfo","_context2","subscribeChannelInfo","_x3","publisheChannel","_ref3","_callee3","premsg","_context3","stringify","pushed","listnum","_x4","_x5","_x6","_x7","publisheInfo2Channel","delChannel","ChatWith","useTranslation","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","React","Box","sx","bgcolor","width","display","alignItems","padding","gridAutoColumns","gap","TextField","variant","onChange","event","target","gridRow","gridColumn","Button","color","component","href","iconsArray","Face","FaceOutlined","SentimentSatisfiedOutlined","SentimentVerySatisfiedOutlined","BasicList","userId","useSelector","newalertid","chatingid","selectSendingReceived","createSelector","sendingkeys","receivedkeys","mergedidrepeat","concat","Array","from","Set","chatinglist","ChatingItems","_step","uniqueSet","_iterator","_createForOfIteratorHelper","obj","has","add","removeDuplicates","channelid","hasNewMessage","ListItem","disablePadding","ListItemButton","randomIndex","RandomIcon","style","marginRight","getRandomIcon","ListItemText","marginLeft","FiberManualRecordIcon","fontSize","aria-label","List","ListItemIcon","InboxIcon","primary","Divider","ButtonAppBar","cleanwhat","useDispatch","_React$useState","_React$useState2","anchorEl","setAnchorEl","AppBar","position","backgroundColor","Toolbar","IconButton","HomeIcon","Typography","flexGrow","DriveFileRenameOutlineIcon","marginBottom","edge","aria-controls","aria-haspopup","onClick","currentTarget","MoreVertIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","cleantimestr","cleantimeaction","ClearIcon","clean","console","log","clear","setTimeout","window","location","reload","Home","createElement","ChatList","InputText","setRandomText","ref_input","useRef","handleButtonClick","current","isControlKeyPressed","bottom","inputRef","onKeyUp","onKeyDown","multiline","ChatingList","listcleantimed","view_cleanstr","chatListContainerRef","selectSendingAndReceived","mergedList","_toConsumableArray","sort","sendingandreceivedlist","cleanTime","SendingItems","sendingitem","textAlignment","listItemStyle","paddingLeft","paddingRight","pressTimer","handleCopyToClipboard","navigator","clipboard","writeText","error","disableRipple","onMouseDown","onMouseUp","clearTimeout","align","userSelect","Paper","elevation","whiteSpace","toLocaleTimeString","hour","minute","hour12","useEffect","scrollTop","scrollHeight","ref","maxHeight","overflowY","useParams","fromId","parentInputText","setParentInputText","_useState3","_useState4","randomText","channelInfo","onin","sendresult","sendinginfo","sendingaction","postinfo","sended","handleClick","times","interval","setInterval","mymsglist","localList","receivedlist","receivedlistwithpublic","public_cleanstr","public_cleanTime","clearInterval","top","left","height","flexDirection","router","i18n","systemLanguage","language","pollinginterval","REACT_APP_Polling_Interval","skipCount","storedUserId","usrinfogen","theid","setItem","thekeypair","currentDate","setDate","getDate","public_cleantimestr","public_cleantime","curDate","me_cleantimestr","me_cleantime","u_info","shouldSkipPolling","lastsendDate","timeDiff","getTime","rawlocalList","public","remotenewone","mergedLocal","newone","needgetall_flag","rawreceivedlist","time_cleanstr","parseInt","changeLanguage","document","title","Router","Routes","Route","path","element","ChatSurface","use","initReactI18next","init","resources","en","translation","enTranslation","zh","zhTranslation","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","Provider","PersistGate","loading","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25397dbb.chunk.js","sourcesContent":["// reducers.js\nimport { cloneDeep } from 'lodash';\nimport { combineReducers } from 'redux';\n// 其他 reducer\nconst usrinfo = (state = {},action)=> {\n\tif(action.type === 'quickusrinfoid'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate.id = action.id;\n\t\tnewstate.long = 'new';\n\t\treturn  newstate;\n\t}\n\tif(action.type === 'quickusrinfopubkey'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate.pubkey = action.pubkey;\n\t\tnewstate.long = 'new';\n\t\treturn  newstate;\n\t}\n\tif(action.type === 'usrinfo'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate.id = action.info.id;\n\t\tnewstate.pubkey = action.info.pubkey;\n\t\tnewstate.long = 'old';\n\t\treturn  newstate;\n\t}\n\tif(action.type === 'newusrinfo'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate.id = action.info.id;\n\t\tnewstate.pubkey = action.info.pubkey;\n\t\tnewstate.long = 'new';\n\t\treturn  newstate;\n\t}\n\treturn state;\n}\nconst sending = (state = {},action)=>{\n\tif(action.type === 'sendingmsg'){\n\t\tconst newstate = cloneDeep(state);\n\t\tconst thesenddic = {\n\t\t\tid:action.info.id,\n\t\t\tfromid:action.info.fromid,\n \t\t\ttime:action.info.time,\n\t\t\ttoid:action.info.toid,\n\t\t\ttext:action.info.text,\n\t\t\tmsgstatus:action.info.msgstatus\n\t\t}\n\t\tif(action.info.toid in newstate){\n\t\t\tconst list = newstate[action.info.toid];\n\t\t\tlist.push(thesenddic);\n\t\t}\n\t\telse{\n\t\t\tnewstate[action.info.toid] = [];\n\t\t\tnewstate[action.info.toid].push(thesenddic);\n\t\t}\n\t\treturn newstate;\n\n\t}\n\tif(action.type === 'sendedmsg'){\n\t\tconst newstate = cloneDeep(state);\n\t\tif(action.toid in newstate){\n\t\t\tconst list = newstate[action.toid];\n\t\t\tlist.forEach((item) => {\n\t\t\t\tif(item['id']===action.msgid)\n\t\t\t\t\titem['msgstatus'] = action.result\n  \t\t\t});\n\t\t}\n\t\treturn newstate;\n\n\t}\n\tif(action.type === 'cleansending'){\n\t\treturn {};\n\t}\n\treturn state;\n}\nconst received = (state = {},action)=>{\n\tif(action.type === 'receivedmsg'){\n\t\tconst newstate = cloneDeep(state);\n\t\tconst thesenddic = {\n\t\t\tid:action.info.id,\n\t\t\tfromid:action.info.fromid,\n \t\t\ttime:action.info.time,\n\t\t\ttoid:action.info.toid,\n\t\t\ttext:action.info.text\n\t\t}\n\t\tif(action.info.fromid in newstate){\n\t\t\tconst list = newstate[action.info.fromid];\n\t\t\tlist.push(thesenddic);\n\t\t}\n\t\telse{\n\t\t\tnewstate[action.info.fromid] = [];\n\t\t\tnewstate[action.info.fromid].push(thesenddic);\n\t\t}\n\t\treturn newstate;\n\n\t}\n\tif(action.type === 'receivedpubmsg'){\n\t\tconst newstate = cloneDeep(state);\n\t\tconst thesenddic = {\n\t\t\tid:action.info.id,\n\t\t\tfromid:action.info.fromid,\n \t\t\ttime:action.info.time,\n\t\t\ttoid:action.info.toid,\n\t\t\ttext:action.info.text\n\t\t}\n\t\tif(action.info.toid in newstate){\n\t\t\tconst list = newstate[action.info.toid];\n\t\t\tlist.push(thesenddic);\n\t\t}\n\t\telse{\n\t\t\tnewstate[action.info.toid] = [];\n\t\t\tnewstate[action.info.toid].push(thesenddic);\n\t\t}\n\t\treturn newstate;\n\n\t}\n\tif(action.type === 'cleanreceived'){\n\t\treturn {};\n\t}\n\treturn state;\n}\nconst comparemd5 = (state = {publicmd5:\"\",memd5:\"\"},action)=>{\n\tif(action.type==='genmd5'){\n\t\tconst newstate = cloneDeep(state);\n\t\tif(action.id === 'pub')\n\t\t\tnewstate['publicmd5'] = action.md5str;\n\t\tif(action.id === 'me')\n\t\t\tnewstate['memd5'] = action.md5str;\n\t\treturn newstate;\n\t}\n\treturn state;\n\n}\nconst incleantime = (state = {},action)=>{\n\tif(action.type==='incleantime'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate[action.id] = action.time;\n\t\treturn newstate;\n\t}\n\treturn state;\n}\nconst viewcleantime = (state = {},action)=>{\n\tif(action.type==='viewcleantime'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate[action.id] = action.time;\n\t\treturn newstate;\n\t}\n\treturn state;\n}\nconst onchatingid = (state = 0,action)=>{\n\tif(action.type === 'onchatingid')\n\t\treturn action.id;\n\treturn state\n}\nconst newalert = (state = 0,action)=>{\n\tif(action.type === 'newalert')\n\t\treturn action.id;\n\treturn state\n}\nconst decryptmsg = (state = {},action) => {\n\tif(action.type === 'newdecryptmsg'){\n\t\tconst newstate = cloneDeep(state);\n\t\tnewstate[action.id]=action.msg;\n\t\treturn newstate;\n\t}\n\treturn state;\n}\nconst lastsendtime = (state = '',action) => {\n\tif(action.type === 'lastsendtime')\n\t\treturn action.time;\n\treturn state;\n}\n\n\n\nconst test = (state = '',action)=>{\n\tif(action.type==='testaction'){\n\t\tconst newstate = action.info;\n\t\treturn newstate;\n\t}else{\n\t\treturn state;\n\t}\n}\n\n\t\n\nconst getcombineReducer = combineReducers({\n\tusrinfo:usrinfo,\n\tsending:sending,\n\treceived:received,\n\tcomparemd5:comparemd5,\n\tincleantime:incleantime,\n\tviewcleantime:viewcleantime,\n\tonchatingid:onchatingid,\n\tnewalert:newalert,\n\tdecryptmsg:decryptmsg,\n\tlastsendtime:lastsendtime,\n\ttest:test\n});\nconst rootInitialState = getcombineReducer(undefined, {});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'state_clean') {\n    return rootInitialState;\n  } else {\n    return getcombineReducer(state, action);\n  }\n};\n\n\nexport default rootReducer;\n","// store.js\n\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers/rootreducer.js'; // 导入你的根 reducer\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer ,\n  {\n    blacklist: ['received']\n  });\n\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store); // 创建持久化存储实例\nexport { store, persistor };\n","import { v4 as uuidv4 } from 'uuid';\nimport  CryptoJS from 'crypto-js';\n\n// 将消息保存在你的应用中\nconst commonaction = (type,info) =>{\n\tconst messageId = uuidv4();\n\tconst currentTime = new Date().toISOString();\n\tinfo['id'] = messageId;\n\tinfo['time'] = currentTime;\n\n\tconst action = {\n\t\ttype: type,\n\t\tinfo: info\n\t}\n\treturn action;\n}\nconst usrInfo = (info) =>{\n\tconst action = {\n\t\ttype: 'usrinfo',\n\t\tinfo: info\n\t}\n\treturn action;\n}\n\nconst newUsrInfo = (info) =>{\n\tconst action = {\n\t\ttype: 'newusrinfo',\n\t\tinfo: info\n\t}\n\treturn action;\n}\nconst quickUsrInfoId = (id) =>{\n\tconst action = {\n\t\ttype: 'quickusrinfoid',\n\t\tid: id\n\t}\n\treturn action;\n}\nconst quickUsrInfoPubkey = (pubkey) =>{\n\tconst action = {\n\t\ttype: 'quickusrinfopubkey',\n\t\tpubkey: pubkey\n\t}\n\treturn action;\n}\n\n/*\n * info = {\n * \ttoid:toid,\n * \ttext:text\n * \t}\n *\n */\nconst sendedMsg = (toid,msgid,result) =>{\n\tconst action = {\n\t\ttype: 'sendedmsg',\n\t\ttoid: toid,\n\t\tmsgid: msgid,\n\t\tresult: result\n\t}\n\treturn action;\n}\n\n/*\n * info = {\n * \tfromid:fromid,\n * \ttoid:toid,\n * \ttime:time,\n * \ttext:text\n * \t}\n *\n */\nconst sendingMsg = (info) =>{\n\treturn commonaction('sendingmsg',info);\n}\n/*\n * info = {\n * \tfromid:fromid,\n * \ttoid:toid,\n * \ttime:time,\n * \ttext:text\n * \t}\n *\n */\nconst receivedMsg = (info) =>{\n\tconst action = {\n\t\ttype: 'receivedmsg',\n\t\tinfo: info\n\t}\n\treturn action;\n}\n\nconst receivedPubMsg = (info) =>{\n\tconst action = {\n\t\ttype: 'receivedpubmsg',\n\t\tinfo: info\n\t}\n\treturn action;\n}\nconst genMd5 = (id,object) =>{\n\tconst str = object.toString();\n\tconst md5Hash = CryptoJS.MD5(str).toString();\n\tconst action = {\n\t\ttype: 'genmd5',\n\t\tmd5str: md5Hash,\n\t\tid: id\n\t}\n\treturn action;\n\n}\nconst inCleanTime = (id,time) =>{\n\tconst action = {\n\t\ttype: 'incleantime',\n\t\tid: id,\n\t\ttime: time\n\t}\n\treturn action;\n}\n\nconst viewCleanTime = (id,time) =>{\n\tconst action = {\n\t\ttype: 'viewcleantime',\n\t\tid: id,\n\t\ttime: time\n\t}\n\treturn action;\n}\nconst cleanSending = () => {\n\tconst action = {\n\t\ttype: 'cleansending'\n\t}\n\treturn action;\n}\nconst cleanReceived = () => {\n\tconst action = {\n\t\ttype: 'cleanreceived'\n\t}\n\treturn action;\n}\nconst onChatingId = (id) => {\n\tconst action = {\n\t\ttype: 'onchatingid',\n\t\tid: id\n\t}\n\treturn action;\n}\nconst newAlert = (id) => {\n\tconst action = {\n\t\ttype: 'newalert',\n\t\tid: id\n\t}\n\treturn action;\n}\nconst newDecryptMsg = (id,msg) =>{\n\tconst action = {\n\t\ttype: 'newdecryptmsg',\n\t\tid: id,\n\t\tmsg: msg\n\t}\n\treturn action;\n}\nconst lastSendTime = ()=>{\n\tconst currentTime = new Date().toISOString();\n\tconst action = {\n\t\ttype: 'lastsendtime',\n\t\ttime: currentTime\n\t}\n\treturn action;\n}\n\nconst StateClean = () => {\n\tconst action = {\n\t\ttype: 'state_clean'\n\t}\n\treturn action;\n}\n\n\n\nconst testAction = () =>{\n\tconst info = {\n\t\thint:'a test to redux action'\n\t}\n\n\tconst testaction = commonaction('testaction',info);\n\treturn testaction;\n}\n\nexport { lastSendTime, StateClean, newDecryptMsg, newAlert, quickUsrInfoId, quickUsrInfoPubkey ,onChatingId, cleanSending, cleanReceived, usrInfo , newUsrInfo, sendedMsg, sendingMsg, receivedMsg,testAction,receivedPubMsg,genMd5,inCleanTime,viewCleanTime }\n\n","import { genkeypair } from './key.js';\nconst genid = ()=>{\n\tconst min=10000;\n\tconst max=99999;\n\treturn Math.floor(Math.random()*(max-min+1))+min;\n}\nconst genuserinfo = ()=>{\n\treturn {\n\t\tid: new Promise((resolve,reject)=>{\n\t\t\t\tconst id = genid();\n                        \tresolve(id);\n                         }),\n\t\tkeypair: new Promise((resolve,reject)=>{\n\t\t\t\tconst keypair = genkeypair();\n                        \tresolve(keypair);\n                         })\n\t}\n\t\n}\n\nexport { genid ,genuserinfo}\n","import NodeRSA from 'node-rsa';\nconst genkeypair = ()=>{\n  // 生成RSA密钥对\n  const key = new NodeRSA({ b: 1024 });\n  const publicKey = key.exportKey('pkcs8-public-pem');\n  const privateKey = key.exportKey('pkcs8-private-pem');\n  return {\n          publickey:publicKey,\n          privatekey:privateKey\n  }\n}\n\n\nconst pubKey = () => {\n  const testkey = '-----BEGIN PUBLIC KEY-----\\n' +\n    'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6SEqCG9NSrgHGAyyTZfZ\\n' +\n    'ObXc/+6eJEjUKaglMvUiSbMdYT5qeCPzD0j7U57DcE0tn8BeLCL1HjOCGfPoKiWG\\n' +\n    'fwUOBstJvW7sqlQefBnPTy+07h6WKF/2H8J/6hInCRmopFn9x9cLaj4ce/dh+0cI\\n' +\n    'L4K4HZ+58jSqzRICabBUwvzeL+WrDtMpnS/JgzPxyyV7tl+sg/n0+dGfS1l2hqPY\\n' +\n    'Zr0/g/53aiGzCAeu5t0moCvEPfBEd0XEisOC6Dcl3jgKTn17dd+dk4Jmsc7428i9\\n' +\n    'ycriBUZj39HgotmpG5qZG0fHt0B6aXMJwYVE504uNobmKrYinhixXd4D2zX03rEZ\\n' +\n    '5wIDAQAB\\n' +\n    '-----END PUBLIC KEY-----\\n';\n    if(typeof localStorage == \"undefined\")\n\treturn testkey;\n    var storedPublicKey = localStorage.getItem('publicKey');\n    if(storedPublicKey)\n\treturn storedPublicKey;\n    else\n\treturn testkey;\n\t\n\n}\nconst privKey = () => {\n  const testkey = '-----BEGIN PRIVATE KEY-----\\n' +\n    'MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDpISoIb01KuAcY\\n' +\n    'DLJNl9k5tdz/7p4kSNQpqCUy9SJJsx1hPmp4I/MPSPtTnsNwTS2fwF4sIvUeM4IZ\\n' +\n    '8+gqJYZ/BQ4Gy0m9buyqVB58Gc9PL7TuHpYoX/Yfwn/qEicJGaikWf3H1wtqPhx7\\n' +\n    '92H7Rwgvgrgdn7nyNKrNEgJpsFTC/N4v5asO0ymdL8mDM/HLJXu2X6yD+fT50Z9L\\n' +\n    'WXaGo9hmvT+D/ndqIbMIB67m3SagK8Q98ER3RcSKw4LoNyXeOApOfXt1352Tgmax\\n' +\n    'zvjbyL3JyuIFRmPf0eCi2akbmpkbR8e3QHppcwnBhUTnTi42huYqtiKeGLFd3gPb\\n' +\n    'NfTesRnnAgMBAAECggEAUYDGsSw4WWb9E+tcasQrrYFnQhKqNwU/J1EhsC8DTcDR\\n' +\n    'BK5NirMGxtE9DH701M4mpTMbuVJ/X4+ibHBZOmLkIoQh4z4vCYs+Mk42WiyrzYNg\\n' +\n    'Pd9zn6ns4i2dirfN7eCKlOrhTnxgAUS1sKFMIA01T2bj93dgCs1e6VLihRCgkYor\\n' +\n    'SZnWuH3Fh2FfKsZmGgDvMWBuUs3Uhz+O0VAbO/eqwLvu4dZSXUMYNYDBi+F+pIk7\\n' +\n    'OEGAnOjd+gwPpadhTS3MhHKF/e6+vPd0CYVaqDlSka9/DD1eqFb+q6kZ6jPHougL\\n' +\n    '7SfeGvdtNCFoHHjIIqaN88T7WQ6GcSIlQOo8Y+T8AQKBgQDvdLAojl/fvw7QTfjN\\n' +\n    'ijnxjN57BTavUQ1gOOH0EdBNkTLkmSatxG5OwrbY6NpwBqoe9NljoJX5YxXWTUBh\\n' +\n    'MJpqdGomsb1Fra5+JvmpMpN/4ZZL8UmisQ9HBfWSTYMUXqwPFpsTwFuJc0SBxa/V\\n' +\n    'w4CAMfNGHUCQgbwlBc3LpURV5QKBgQD5PJT4SSjxI8W6JRRWqZnq2fSuxwd7DhWE\\n' +\n    '9juo75wMWWYRpWvxHZhWDUKiXXC39mEcsBkaa6z9iSzZ0LIK4lz60jhmGhHvAdNc\\n' +\n    'YACG7aH+JD/XMsak34BgYGEqnJkbXa84ZAAXQSoAiLoCzCfymdU6xcdXKX5kFOKx\\n' +\n    'ZEAlfbMz2wKBgCxsG1oKv6KEkTz3mhaXdBRpq8RqvTBc+vxE0TY0L86UBzr9Zn2K\\n' +\n    'GWSnHsCywgNSWTEQ/1tKKUhwp1ZwUmc1WxAwtJilFJXemKZymJJY/aAVu4ovIxf5\\n' +\n    'fPoSEvKnSo/22DicWvyZDOI87hKdF/eyIx6lJZp2RsoIJ10+7GTBLiI5AoGBAL/+\\n' +\n    'eC9vhDeGPAnyCGHeErCEp+V/cnbL2a3sVPcFZatprqQHT0iVaMVZP6x92JgOFq8X\\n' +\n    'xK7CpadFZaSBDLYvvDqHeGTGzmvUdzJgzeci5bg1ymwHNFjLx0P22sMNkTAwkgsZ\\n' +\n    'laxUSXvR16DSDi/nawf0VWQCldeY8yx9sqBu3X4jAoGAMncKcctLjv4H6kQa+s40\\n' +\n    'QOAHroAs7ehL0lNGEtAAvNmgbTuIZSRZ6/gfWHtQ8XbUNBYZbkJrlpS6TEvi7SsB\\n' +\n    'vPXfeSnHMI56FXxN9QzeLDEDOSdD0jlW/b+L71gEvXzydD0pkmz8lZ0B6dPpt/zI\\n' +\n    '8NDzM2jMbFTTg5ps6EcVk9c=\\n' +\n    '-----END PRIVATE KEY-----\\n';\n    if(typeof localStorage == \"undefined\")\n\treturn testkey;\n    var storedPrivateKey = localStorage.getItem('privateKey');\n    if(storedPrivateKey)\n\treturn storedPrivateKey;\n    else\n\treturn testkey;\n\n}\n\nexport { genkeypair, pubKey, privKey}\n","import stringRandom from 'string-random';\nimport CryptoJS from 'crypto-js';\nimport NodeRSA  from 'node-rsa';\nimport { pubKey, privKey } from './key.js';\nconst  passbytes = 16;\nconst genPass = () => {\n  const pass = stringRandom(passbytes);\n  const iv = stringRandom(16);\n  return {\n    pass: pass,\n    iv: iv\n  };\n};\nconst aesEncrypt = (text, key, iv) => {\n  const encrypted = CryptoJS.AES.encrypt(text, key, { iv: iv });\n  return encrypted.toString();\n};\nconst getEncryptedPass = (pass, iv,youpubkey) => {\n  const passAndIv = pass + iv;\n  const rsa = new NodeRSA();\n  rsa.importKey(youpubkey, 'pkcs8-public-pem');\n  const encryptedPass = rsa.encrypt(passAndIv,'base64');\n  return encryptedPass;\n};\nconst getDecryptedPass = (encryptedPass) => {\n  const rsa = new NodeRSA();\n  rsa.importKey(privKey(), 'pkcs8-private-pem');\n  const decryptedPass = rsa.decrypt(encryptedPass).toString();\n  return decryptedPass;\n}\n\n\nconst encrypt = (data,youpubkey=pubKey()) => {\n  const passAndIv = genPass();\n  const encryptedPass = getEncryptedPass(passAndIv.pass, passAndIv.iv,youpubkey);\n  const encryptedContent = aesEncrypt(data, passAndIv.pass, passAndIv.iv);\n  return {\n    encryptedpass: encryptedPass,\n    encryptedcontent: encryptedContent\n  };\n};\n\n// 以下是解密函数的示例\nconst aesDecrypt = (encrypted, key, iv) => {\n  const decrypted = CryptoJS.AES.decrypt(encrypted, key, { iv: iv });\n  return decrypted.toString(CryptoJS.enc.Utf8);\n};\n\nconst getDecryptedMessage = (encryptedPass, encryptedContent) => {\n  const decryptedPass = getDecryptedPass(encryptedPass);\n  const passAndIv = decryptedPass.split('');\n  const key = passAndIv.slice(0, passbytes).join('');\n  const iv = passAndIv.slice(passbytes).join('');\n  const decryptedContent = aesDecrypt(encryptedContent, key, iv);\n  return decryptedContent;\n};\n\nconst decrypt = (encryptedData) => {\n  const { encryptedpass, encryptedcontent } = encryptedData;\n  const decryptedMessage = getDecryptedMessage(encryptedpass, encryptedcontent);\n  return decryptedMessage;\n};\nexport { encrypt, decrypt, getEncryptedPass , getDecryptedPass }\n","import axios from 'axios';\nconst baseurl = process.env.REACT_APP_PUSH_URL;\nconst token = process.env.REACT_APP_TOKEN;\nconst restfulurl = baseurl || 'https://test.com/xxx';\n\n// 准备要发送的 JSON 数据\n/*\nconst data = {\n  key1: 'value1',\n  key2: 'value2',\n};\n*/\n// 设置自定义 Header\nconst headers = {\n  token: token\n};\nconst pushlisturl = (key) =>{\n\tconst url = restfulurl+'/redis/push/chat/'+key;\n\treturn url\n}\nconst getlisturl = (key,start,stop) =>{\n\tconst url = restfulurl+'/redis/list/chat/'+key+'/'+start+'/'+stop;\n\treturn url\n}\nconst getvalueurl = (key) =>{\n\tconst url = restfulurl+'/redis/get/chat/'+key;\n\treturn url\n}\nconst setjsonurl = (key) =>{\n\tconst url = restfulurl+'/redis/setjson/chat/'+key;\n\treturn url\n}\nconst delkeyurl = (key) => {\n\tconst url = restfulurl+'/redis/del/chat/'+key;\n\treturn url\n}\n\nconst getkeyvalue = (key)=>{\n\tconst geted = axios.get(getvalueurl(key),{headers});\n\treturn geted;\n}\nconst setkeyjson = (key,msg)=>{\n   const pushed = axios.post(setjsonurl(key),msg,{headers})\n   return pushed;\n}\nconst getlist = (key,start=0,stop=-1)=>{\n\tconst geted = axios.get(getlisturl(key,start,stop),{headers});\n\treturn geted;\n}\n\nconst pushtolist = (key,msg)=>{\n   const pushed = axios.post(pushlisturl(key),msg,{headers})\n   return pushed;\n}\nconst delkey = (key)=>{\n\tconst geted = axios.get(delkeyurl(key),{headers});\n\treturn geted;\n}\n\n\nconst restfulapimethod = {\n\tgetlist:getlist,\n\tpushtolist:pushtolist,\n\tsetkeyjson:setkeyjson,\n\tgetkeyvalue:getkeyvalue,\n\tdelkey:delkey\n}\n\nexport { restfulapimethod  }\n\n\n","import { restfulapimethod } from './keyvalueimplementwithrestfulapi.js';\nconst  apimethod = restfulapimethod;\nconst pushKeyValue = (key,value)=>{\n\treturn new Promise((resolve,reject)=>{\n\t\tconst result = apimethod.setkeyjson(key,value);\n\t\tresult.then((result)=>resolve(result.data)).catch((err)=>reject(err));\n\t});\n\n}\nconst getKeyValue = (key)=>{\n\treturn new Promise((resolve,reject)=>{\n\t\tconst result = apimethod.getkeyvalue(key);\n\t\tresult.then((result)=>resolve(result.data)).catch((err)=>reject(err));\n\t});\n\n\n\n\n}\nconst pushToList = (key,value)=>{\n\treturn new Promise((resolve,reject)=>{\n\t\tconst result = apimethod.pushtolist(key,value);\n\t\tresult.then((result)=>resolve(result.data)).catch((err)=>reject(err));\n\t});\n\n}\nconst getList = (key,start=0,stop=-1)=>{\n\treturn new Promise((resolve,reject)=>{\n\t\tconst result = apimethod.getlist(key,start,stop);\n\t\tresult.then((result)=>resolve(result.data)).catch((err)=>reject(err));\n\t});\n\n}\nconst delKey = (key)=>{\n\treturn new Promise((resolve,reject)=>{\n\t\tconst result = apimethod.delkey(key);\n\t\tresult.then((result)=>resolve(result.data)).catch((err)=>reject(err));\n\t});\n}\n\n\n\nexport { pushKeyValue,getKeyValue,pushToList,getList,delKey  }\n","import { store } from './store'\n\nconst printState = () => {\n  console.log('Current Store State:', store.getState());\n}\n\nconst getA_not_in_B = (A, B, keyname) => {\n  const resultlist = A.filter((itemA) => {\n    const isItemAinB = B.some((itemB) => itemB[keyname] === itemA[keyname]);\n    return !isItemAinB;\n  });\n  return resultlist;\n};\nfunction removeDuplicates(list) {\n  const uniqueSet = new Set();\n  const result = [];\n\n  for (const obj of list) {\n    if (!uniqueSet.has(obj.id)) {\n      uniqueSet.add(obj.id);\n      result.push(obj);\n    }\n  }\n\n  return result;\n}\nconst printList = (list) => {\n  list.forEach((item) => {\n    console.log(item);\n  });\n};\nconst itemInList = (theitem,list,keyname)=>{\n    const isItemInlist = list.some((item) => item[keyname] === theitem[keyname]);\n    return isItemInlist;\n}\n\nfunction printStoreState() {\n  console.log('Current Store State:', store.getState())\n}\nfunction getState(){\n\treturn store.getState();\n}\nfunction dispatch(action){\n        return store.dispatch(action)\n}\n\nexport default printStoreState\n\n\nexport { removeDuplicates,getA_not_in_B, printList,itemInList,printState,getState,dispatch };\n","import { encrypt, decrypt} from './encrypt.js';\nimport { pushKeyValue ,pushToList,getKeyValue,getList,delKey } from './keyvalue.js';\nimport { getState,dispatch } from './util.js';\nimport { newDecryptMsg } from './actions/index.js';\n\n\nconst subscribeChannel = (channel,start=0,stop=-1)=>{\n\treturn new Promise(async(resolve, reject) => {\n\t\tconst clist = await getList(channel,start,stop);\n\t\tlet infolist;\n\t\tif(channel!=='public')\n\t\t\tinfolist = clist[Number(channel)];\n\t\telse\n\t\t\tinfolist = clist[channel];\n\t\tif(infolist === undefined){\n\t\t\treject();\n\t\t\treturn;\n\t\t}\n\t\tconst localdecryptdic = getState().decryptmsg;\n\t\tconst decryptlist = infolist.map((itemstr)=>{\n\t\t\tconst item = JSON.parse(itemstr);\n\t\t\tconst type = item.type;\n\t\t\tconst msgid = item.id;\n\t\t\tif(type === 'secret'){\n\t\t\t\tif(msgid in localdecryptdic){\n                        \t    const decryptedlocalmsg = localdecryptdic[msgid];\n\t\t\t\t    if(decryptedlocalmsg)\n\t\t\t\t    \treturn JSON.parse(decryptedlocalmsg);\n                \t\t}else{\n\n\t\t\t\t\tconst enmsg = item.msg;\n\t\t\t\t\tconst pass = item.encryptedpass;\n\t\t\t\t\tconst enmsgobj = { \n\t\t\t\t\t\tencryptedpass:pass, \n\t\t\t\t\t\tencryptedcontent:enmsg\n\t\t\t\t\t}\n\t\t\t\t\tconst decryptedmsg = decrypt(enmsgobj);\n\t\t\t\t\tdispatch(new newDecryptMsg(msgid,decryptedmsg));\n\t\t\t\t\treturn JSON.parse(decryptedmsg);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(type === 'pub'){\n\t\t\t\treturn item.msg;\n\t\t\t}\n\t\t\treturn {};\n\n\t\t});\n\t\tresolve(decryptlist);\n\t});\n}\nconst subscribeChannelOne = (channel,oneindex)=>{\n   return subscribeChannel(channel,oneindex,oneindex);\n}\nconst getchannelpubkey = async(channel) =>{\n\tconst cinfostr = await subscribeChannelInfo(channel);\n\tif(cinfostr === undefined || cinfostr === null)\n\t\treturn undefined;\n\tif(cinfostr['info-'+channel] === undefined || cinfostr['info-'+channel] === null)\n\t\treturn undefined;\n\tconst cinfo = JSON.parse(cinfostr['info-'+channel])\n\treturn cinfo.pubkey;\n\n}\nconst publisheChannel = async(channel,msg,type,pubkey)=>{\n\tlet premsg;\n\tif(type === 'pub'){\n\t\tpremsg = {\n\t\t\ttype:'pub',\n\t\t\tmsg:msg,\n\t\t\ttime: msg.time\n\t\t}\n\t}\n\tif(type === 'secret'){\n\t  if(pubkey===undefined){\n\t\tpubkey = await getchannelpubkey(channel);\n\t\tif(pubkey === undefined){\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treject('can not get receiver info');\n\t\t\t});\n\n\t\t}\n\t  }\n\t  // 加密数据\n\t  const encryptedData = encrypt(JSON.stringify (msg),pubkey);\n\t  premsg = {\n\t\t  type:'secret',\n\t\t  msg: encryptedData.encryptedcontent,\n\t\t  encryptedpass: encryptedData.encryptedpass,\n\t\t  time: msg.time\n\n\t  }\n\t}\n\n\tpremsg['id'] = msg.id;\n\treturn new Promise((resolve, reject) => {\n\t\tconst pushresult = pushToList(channel,premsg);\n\t\tpushresult.then((result)=>{\n\t\tconst pushed = {\n\t\t\tid: premsg.id,\n\t\t\tlistnum: result.result\n\t\t}\n\t\tresolve(pushed);\n\t\t}).catch((err)=>reject(err));\n\t});\n\n}\nconst subscribeChannelInfo = (channel)=>{\n\treturn new Promise((resolve, reject) => {\n\t\tresolve(getKeyValue('info-'+channel));\n\t});\n\n\n}\nconst publisheInfo2Channel = (channel,msg)=>{\n\treturn new Promise((resolve, reject) => {\n\t\tresolve(pushKeyValue('info-'+channel,msg));\n\t});\n\n}\nconst delChannel = (channel)=>{\n\treturn new Promise((resolve, reject) => {\n\t\tresolve(delKey(channel));\n\t});\n}\n\nexport { publisheChannel,subscribeChannel,subscribeChannelOne, publisheInfo2Channel,subscribeChannelInfo,delChannel,getchannelpubkey }\n\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { useTranslation } from 'react-i18next';\n\nimport { useState } from 'react';\nexport default function ChatWith() {\n  const { t } = useTranslation();\n  const [inputText, setInputText] = useState('');\n  const handleInputChange = (event) => {\n    setInputText(event.target.value); \n  };\n  return (\n      <Box sx={{\n          bgcolor: 'background.paper',\n          width: \"100%\",\n          display: 'grid',\n          alignItems: 'center',\n          padding: '10px',\n          gridAutoColumns: '1fr',\n          gap: 1,\n        }}>\n\t  <TextField id=\"channelid\" variant=\"outlined\" value={inputText} onChange={handleInputChange} sx={{ gridRow: '1', gridColumn: '1 / 6' }}/>\n\n\t  <Button color=\"inherit\" component=\"a\" href={\"/chat/\"+inputText} sx={{ gridRow: '1', gridColumn: '6 / 7' }}>\n\t  {t('chat')}\n          </Button>\n      </Box>\n  );\n}\n","import {Face,FaceOutlined,SentimentSatisfiedOutlined,SentimentVerySatisfiedOutlined} from '@mui/icons-material';\n\nexport const iconsArray = [\n  Face,FaceOutlined,SentimentSatisfiedOutlined,SentimentVerySatisfiedOutlined\n];\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InboxIcon from '@mui/icons-material/Inbox';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport ChatWith from './ChatWith';\nimport { useSelector } from 'react-redux'\nimport { createSelector } from 'reselect';\nimport { useTranslation } from 'react-i18next';\nimport { iconsArray } from './faceiconarray';\nimport { removeDuplicates } from './util';\n\n\nexport default function BasicList() {\n  const { t } = useTranslation();\n  const userId = useSelector((state)=>{return state.usrinfo.id});\n  const newalertid = useSelector((state)=>state.newalert);\n  const chatingid = useSelector((state)=>{return state.onchatingid});\n  const selectSendingReceived = createSelector(\n  \tstate => state.sending,\n  \tstate => state.received,\n  \t(sending, received) => {\n    \t// 在这里组合和转换数组\n\t  \t    const sendingkeys = Object.keys(sending);\n\t  \t    const receivedkeys = Object.keys(received);\n\t  \t    const mergedidrepeat = sendingkeys.concat(receivedkeys); // 合并两个数组\n\t  \t    const mergedid = Array.from(new Set(mergedidrepeat));\n\t  \t    return mergedid;\n  \t}\n  );\n  const chatinglist = useSelector(selectSendingReceived); \n\n  const getRandomIcon = () => {\n   const randomIndex = Math.floor(Math.random() * iconsArray.length);\n   const RandomIcon = iconsArray[randomIndex];\n   return <RandomIcon style={{ marginRight: '8px' }}/>;\n  };\n\n\n  const chatinglistwithnopublic = removeDuplicates(chatinglist.filter((channelid) => channelid !== 'public'));\n  const ChatingItems = chatinglistwithnopublic.map((channelid) => {\n     var hasNewMessage = (channelid === newalertid && chatingid!==newalertid);\n     return (\n          <ListItem key={channelid} disablePadding>\n           <ListItemButton component=\"a\" href={\"/chat/\"+channelid}>\n\t     {getRandomIcon()}\n             <ListItemText>\n                {channelid}\n             </ListItemText>\n\t     {hasNewMessage && (\n            \t\t<span style={{ color: 'green', marginLeft: '1px' }}>\n              \t\t<FiberManualRecordIcon fontSize=\"small\" />\n            \t\t</span>\n             )}\n           </ListItemButton>\n          </ListItem>\n    );\n  });\n\n\n  return (\n    <Box sx={{ width: '100%', bgcolor: 'background.paper' }}>\n      <nav aria-label=\"main mailbox folders\">\n        <List>\n          <ListItem disablePadding>\n            <ListItemButton component=\"a\" href=\"/chat/public\">\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={t('publicchat')} />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton component=\"a\" href={\"/chat/\"+userId}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={t('note')} />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n\t  \t<ChatWith />\n          </ListItem>\n        </List>\n      </nav>\n      <Divider />\n      <nav aria-label=\"secondary mailbox folders\">\n        <List>\n\t  {ChatingItems}\n        </List>\n      </nav>\n    </Box>\n  );\n}\n\n\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport HomeIcon from '@mui/icons-material/Home';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport { Menu, MenuItem } from '@mui/material';\nimport { useDispatch ,useSelector} from 'react-redux'\nimport { StateClean,viewCleanTime,inCleanTime,cleanSending,cleanReceived  } from './actions/index';\nimport { useTranslation } from 'react-i18next';\nimport { delChannel } from './subscriber-publisher';\n\nexport default function ButtonAppBar({cleanwhat}) {\n  const channelid = cleanwhat;\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const userId = useSelector((state)=>{return state.usrinfo.id});\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClearClick = () => {\n    // 处理清除操作\n    if(cleanwhat!=='all'){\n\t    // cleantime\n      const currentDate = new Date();\n      const cleantimestr = currentDate.toISOString();\n      const cleantimeaction = new viewCleanTime(cleanwhat,cleantimestr);\n      dispatch(cleantimeaction);\n    }\n    if(cleanwhat==='all'){\n\t    // cleantime\n      delChannel(userId);\n      const currentDate = new Date();\n      const cleantimestr = currentDate.toISOString();\n      dispatch(new cleanSending());\n      dispatch(new cleanReceived());\n      dispatch(new inCleanTime('public',cleantimestr));\n      dispatch(new inCleanTime(userId,cleantimestr));\n    }\n\n    setAnchorEl(null);\n  };\n  const handleClearCompletelyClick = () => {\n    // 彻底清除操作\n    delChannel(userId);\n    const delchannelinfo = delChannel('info-'+userId);\n    delchannelinfo.then((clean)=>{\n\t    console.log(clean);\n    });\n    dispatch(new StateClean());\n    localStorage.clear();\n    setTimeout(() => {\n            window.location.reload();\n    }, 2000);\n    setAnchorEl(null);\n  };\n  \n  return (\n      <AppBar position=\"static\" sx={{ backgroundColor: 'rgba(0, 0, 0, 0.6)' }}>\n        <Toolbar>\n\t  <IconButton color=\"inherit\" component=\"a\" href=\"/\">\n\t  \t<HomeIcon sx={{ marginLeft: '-10px' }}/>\n          </IconButton>\n\t  {cleanwhat === 'all' && (\n\t   <Typography variant=\"h7\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t  {t('yourid')} {userId}\n          </Typography>)}\n\t  {cleanwhat !== 'all' && cleanwhat !== userId && (\n\t   <Typography variant=\"h7\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t  {t('his')}id: {channelid}\n          </Typography>)}\n\t  {cleanwhat === userId && (\n\t   <Typography variant=\"h7\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t  {t('note')} <DriveFileRenameOutlineIcon sx={{ marginBottom: '-5px' }}/>\n          </Typography>)}\n\t  <IconButton\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"more-vert\"\n          aria-controls=\"menu\"\n          aria-haspopup=\"true\"\n          onClick={handleMenuOpen}\n         >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleMenuClose}\n        >\n          <MenuItem onClick={handleClearClick}>\n            <ClearIcon sx={{ marginRight: 1 }} />\n\t      {t('clear')} \n          </MenuItem>\n          {cleanwhat === 'all' && (\n          <MenuItem onClick={handleClearCompletelyClick}>\n            <ClearIcon sx={{ marginRight: 1 }} />\n\t      {t('clearcompletely')} \n          </MenuItem>)}\n        </Menu>\n\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import React from 'react';\nimport ChatList from './ChatList';\nimport AppBar from './AppBar';\nimport { useDispatch } from 'react-redux'\nimport { onChatingId } from './actions/index'\nfunction Home() {\n  const cleanwhat = 'all';\n  const dispatch = useDispatch();\n  dispatch(new onChatingId('home')); \n  return (\n    <div>\n\t<AppBar cleanwhat={cleanwhat} />\n\t<ChatList/>\n    </div>\n  )\n}\n\nexport default Home;\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport stringRandom from 'string-random';\nimport { lastSendTime } from './actions/index';\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { useTranslation } from 'react-i18next';\n\nexport default function InputText({ setInputText,setRandomText }) {\n  const { t } = useTranslation();\n  const boxid = \"inputbox\";\n  const ref_input = useRef('');\n  const dispatch = useDispatch();\n  const handleButtonClick = () => {\n\tdispatch(new lastSendTime());\n\tsetRandomText(stringRandom(5));\n\tsetInputText(ref_input.current.value);\n\tref_input.current.value='';\n  }\n\t\n  const isControlKeyPressed = useRef(false);\n  // 处理键盘按下事件\n  const handleKeyDown = (event) => {\n    if (event.key === 'Control') {\n\tisControlKeyPressed.current = true;\n    } else if (event.key === 'Enter' && isControlKeyPressed.current) {\n    \thandleButtonClick(); // 调用发送消息的函数\n    }\n  };\n  // 处理键盘释放事件\n  const handleKeyUp = (event) => {\n    if (event.key === 'Control') {\n\tisControlKeyPressed.current = false;\n    }\n  };\n\n  return (\n      <Box \n\tsx={{\n\tposition: 'sticky',\n        bottom: '10px',\n        width: '100%',\n        bgcolor: 'background.paper',\n        alignItems: 'center',\n        padding: '10px',\n\tdisplay: 'grid',\n        gridAutoColumns: '1fr',\n        gap: 1,\n      }}\n\t  id={boxid}\n\t  >\n\t  <TextField inputRef={ref_input} onKeyUp={handleKeyUp} onKeyDown={handleKeyDown} variant=\"outlined\" multiline sx={{ gridRow: '1', gridColumn: '1/12' }}/>\n\n\t  <Button onClick={handleButtonClick} sx={{ gridRow: '1', gridColumn: '12/15',color:'#ab003c' }}>\n\t    {t('send')}\n          </Button>\n\t  <Box sx={{ gridRow: '1', gridColumn: '15/16' }}>\n          </Box>\n\n      </Box>\n  );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Paper from '@mui/material/Paper';\nimport { useEffect,useRef } from 'react';\nimport { useSelector } from 'react-redux'\nimport { createSelector } from 'reselect';\n\n\nexport default function ChatingList({ channelid }) {\n   const userId = useSelector((state)=>{return state.usrinfo.id});\n   const view_cleanstr = useSelector((state)=>{return state.viewcleantime[channelid]});\n   const chatListContainerRef = useRef(null);\n   const selectSendingAndReceived = createSelector(\n        state => {return state.sending[channelid]},\n        state => {return state.received[channelid]},\n        (sending,received) => {\n        // 在这里组合和转换数组\n\t\tconst mergedList = [];\n    \t\tif (sending) \n    \t\t  mergedList.push(...sending);\n   \t\tif (received) \n      \t\t  mergedList.push(...received);\n\t\tmergedList.sort((a, b) => new Date(a.time) - new Date(b.time));\n\t\treturn mergedList;\n       }\n  );\n  const sendingandreceivedlist = useSelector(selectSendingAndReceived);\n  \n  let listcleantimed;\n  if(view_cleanstr!==undefined){\n             const cleanTime = new Date(view_cleanstr);\n             listcleantimed = sendingandreceivedlist.filter(obj => {\n                        const objTime = new Date(obj.time);\n                        return objTime > cleanTime;\n             });\n  }else{\n                 listcleantimed = sendingandreceivedlist;\n  }\n\n  \n\n  const SendingItems = listcleantimed.map((sendingitem) => {\n   const time = new Date(sendingitem.time);\n   let textAlignment = '';\n   let listItemStyle = {};\n   if (sendingitem.fromid === userId) {\n    textAlignment = 'right';\n    listItemStyle = { paddingLeft: '50px', paddingRight: '10px',\n    backgroundColor: sendingitem.msgstatus === 'sending' ? '#87CEFA' : sendingitem.msgstatus === 'sended' ? '#eaeaea' : sendingitem.msgstatus === 'failed' ? '#ffcccc' : ''};\n   } else {\n    textAlignment = 'left';\n    listItemStyle = { paddingLeft: '10px', paddingRight: '50px' };\n   }\n   let pressTimer = null;\n   const handleMouseDown = () => {\n  \tpressTimer = setTimeout(() => {\n    \t// 在长按事件触发时执行的逻辑\n    \thandleCopyToClipboard();\n    }, 1000); // 设置长按的时间阈值，单位为毫秒\n   };\n\n   const handleMouseUp = () => {\n  \tclearTimeout(pressTimer);\n   };\n   const handleCopyToClipboard = () => {\n     navigator.clipboard.writeText(sendingitem.text)\n    \t.then(() => {\n        console.log('Text copied to clipboard');\n      // 在此处添加复制成功的逻辑\n        })\n        .catch((error) => {\n        console.error('Error copying text to clipboard:', error);\n      // 在此处添加复制失败的逻辑\n     });\n   };\n\n   return (\n          <ListItem key={sendingitem.id} disablePadding style={listItemStyle}>\n\t   <ListItemButton \n\t   disableRipple={true}\n\t   onMouseDown={handleMouseDown}\n           onMouseUp={handleMouseUp}>\n\t     <ListItemText align={textAlignment}>\n\t        <div style={{ display: 'block',userSelect: 'text' }}>\n\t   \t<span>{sendingitem.text}</span>\n\t        <span> </span>\n\t        <Paper elevation={0} style={{ display: 'inline-block',padding: '5px',fontSize: '10px', color: 'gray',whiteSpace: 'nowrap' }}>\n          \t {time.toLocaleTimeString([],{hour: '2-digit',minute: '2-digit',hour12: false})}\n        \t</Paper>\n\t        </div>\n\t     </ListItemText>\n\t   </ListItemButton>\n          </ListItem>\n   );\n  });\n\n  const scrollToBottom = () => {\n    if (chatListContainerRef.current) {\n      chatListContainerRef.current.scrollTop = chatListContainerRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [selectSendingAndReceived]);\n  return (\n    <Box ref={chatListContainerRef} sx={{ maxHeight: 'calc(100vh - 160px)',width: '100%', bgcolor: 'background.paper', flexGrow: 1, overflowY: 'auto' }}>\n      <Divider />\n      <nav aria-label=\"secondary mailbox folders\">\n        <List>\n\t  {SendingItems}\n        </List>\n      </nav>\n    </Box>\n  );\n}\n\n\n","import * as React from 'react';\nimport AppBar from './AppBar';\nimport Box from '@mui/material/Box';\nimport InputText from './InputText';\nimport ChatingList from './ChatingList';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sendingMsg, sendedMsg , newAlert ,receivedPubMsg, onChatingId } from './actions/index';\nimport { publisheChannel } from './subscriber-publisher.js';\nimport { subscribeChannel,subscribeChannelInfo } from './subscriber-publisher.js';\nimport { getA_not_in_B, itemInList,getState } from './util';\nimport { cloneDeep } from 'lodash';\n\n\n\nexport default function ButtonAppBar() {\n  const dispatch = useDispatch();\n  const { channelid } = useParams();\n  const newalertid = useSelector((state)=>state.newalert);\n  const chatingid = useSelector((state)=>{return state.onchatingid});\n  const userId = useSelector((state)=>{return state.usrinfo.id});\n  const fromId = useSelector((state)=>{return state.usrinfo.id});\n  const [parentInputText, setParentInputText] = useState('');\n  const [randomText, setRandomText] = useState('');\n  const channelInfo = useRef({});\n  const onin = useRef(true);\n\n\n  const handleClick = () => {\n     const sendinginfo = {\n       fromid:fromId,\n       toid:channelid,\n       text:parentInputText,\n       msgstatus:'sending'\n       }\n     const sendingaction = sendingMsg(sendinginfo);\n     dispatch(sendingaction);\n     let sendresult;\n     const postinfo = cloneDeep(sendingaction.info);\n     delete postinfo.msgstatus\n     \n     if(sendinginfo.toid==='public')\n     \tsendresult = publisheChannel(sendinginfo.toid,postinfo,'pub');\n     else{\n        if(channelInfo.current === null){\n\t     const sended = sendedMsg(channelid,postinfo.id,'failed');\n\t     dispatch(sended);\n\t     return;\n\t}\n\tif(channelInfo.current['pubkey']!==undefined)\n     \t\tsendresult = publisheChannel(sendinginfo.toid,postinfo,'secret');\n\telse\n     \t\tsendresult = publisheChannel(sendinginfo.toid,postinfo,'secret',channelInfo.current['pubkey']);\n     }\n     sendresult.then((result)=>{\n\t     const sended = sendedMsg(channelid,result.id,'sended');\n\t     dispatch(sended);\n\t     console.log('send sucess');\n\t     console.log(result.id);\n\t     console.log(result.listnum);\n     });\n     sendresult.catch((err)=>{\n\t     const sended = sendedMsg(channelid,postinfo.id,'failed');\n\t     dispatch(sended);\n     });\n\n     \n  }\n  useEffect(() => {\n    if(parentInputText!=='')\n    \thandleClick();\n  }, [randomText,parentInputText]);\n\n  useEffect(() => {\n      onin.current = true;\n      if(newalertid === chatingid && onin.current){\n\tif(newalertid!==0)\n\t\tdispatch(new newAlert(0));\n      }\n      return ()=>{\n\t onin.current = false;\n      }\n  }, [chatingid]);\n\n  useEffect(() => {\n    dispatch(new onChatingId(channelid)); \n\n    if(channelid!=='public'){\n    \tconst getchannelinfo = subscribeChannelInfo(channelid)\n    \tgetchannelinfo.then((result)=>{\n\t    channelInfo.current = JSON.parse(result['info-'+channelid]);\n\t    if(channelInfo.current === undefined)\n\t\tchannelInfo.current = {};\n\n    \t});\n    }\n\n    if(channelid==='public'){\n      var times = 0;\n      const interval = setInterval(() => {\n        // 在这里执行接收public消息的逻辑\n        times=times+1;\n        console.log('loop ...pub'+times);\n\n        const mymsglist = subscribeChannel(channelid);\n\t      //很大的坑 上面useSelector获取的状态不是新的，时常获取到undefined\n        const localList = getState().received[channelid];\n        mymsglist.then((list)=>{\n\t      //过滤掉fromid=usrid的就行,这样就不显示自己已经发过了的\n\t      const receivedlistwithpublic = list.filter((msg) => msg.fromid !==userId );\n\t      const public_cleanstr = getState().incleantime[channelid];\n\t      let receivedlist;\n\t      if(public_cleanstr!==undefined){\n\t        const public_cleanTime = new Date(public_cleanstr);\n\t        receivedlist = receivedlistwithpublic.filter(obj => {\n  \t\t\tconst objTime = new Date(obj.time);\n  \t\t        return objTime > public_cleanTime;\n\t\t});\n\t      }else{\n\t\treceivedlist = receivedlistwithpublic;\n\t      }\n\t      if(true){\n\t\t      if(localList===undefined){\n\t\t\tconsole.log('received list get null');\n\t      \t        receivedlist.map((msg)=>{\n\t\t\t  dispatch(new receivedPubMsg(msg));\n\t\t\t  return msg.id;\n\t      \t        });\n\t\t      }else{\n\t\t       const filterednewList =  getA_not_in_B(receivedlist,localList,'id');\n\t      \t       filterednewList.map((msg)=>{\n\t\t\t    if(!itemInList(msg,localList,'id'))\n\t\t\t\tdispatch(new receivedPubMsg(msg));\n\t\t\t    return msg.id;\n\t      \t       });\n\n\t\t      }\n\t      }\n        });\n\n      }, 10000); // 每5秒轮询一次\n      return () => {\n      // 清除轮询定时器\n            console.log('Stop public channel polling');\n            clearInterval(interval);\n     };\n    }\n\n\n\n  }, []);\n\t\n  return (\n      <Box sx={{ position: 'fixed',top: 0,left: 0,width:'100%' ,height:'100vh', display: 'flex',flexDirection: 'column' }}>\n      <AppBar cleanwhat={channelid} />\n  \t<ChatingList channelid={channelid} />\n  \t<InputText  setRandomText={setRandomText} setInputText={setParentInputText} />\n      </Box>\n  );\n}\n","import React from 'react'; \nimport { BrowserRouter as Router,Routes, Route} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useEffect,useRef } from 'react';\nimport { useDispatch ,useSelector} from 'react-redux'\nimport { usrInfo, quickUsrInfoId, quickUsrInfoPubkey,newAlert ,receivedMsg,inCleanTime } from './actions/index';\nimport { genuserinfo } from './genuserinfo';\nimport { publisheInfo2Channel,subscribeChannel,subscribeChannelOne } from './subscriber-publisher.js';\nimport Home from './Home';\nimport ChatSurface from './ChatSurface';\nimport { getState, getA_not_in_B,itemInList } from './util.js';\nimport { cloneDeep } from 'lodash';\n\nfunction router(){\nconst { i18n } = useTranslation();\nconst systemLanguage = useRef(navigator.language);\nconst dispatch = useDispatch();\nconst userId = useSelector((state)=>{return state.usrinfo.id});\nconst pubKey = useSelector((state)=>{return state.usrinfo.pubkey});\nconst chatingid = useSelector((state)=>{return state.onchatingid});\nconst lastsendtime = useSelector((state)=>{return state.lastsendtime});\n\nconst env_pollinginterval = process.env.REACT_APP_Polling_Interval;\nconst pollinginterval = env_pollinginterval || 5;\nconst skipCount = useRef(0);\n\n\n//初始化\nuseEffect(() => {\n    //初始化用户信息\n    var storedUserId = localStorage.getItem('userId');\n    var storedPublicKey = localStorage.getItem('publicKey');\n    let storedPrivateKey;\n    if (storedUserId && storedPublicKey) {\n      const u_info = {\n\t      id: storedUserId,\n\t      pubkey: storedPublicKey\n      }\n      dispatch(new usrInfo(u_info)); \n    }\n    else{\n\t    const usrinfogen = genuserinfo();\n\t    usrinfogen.id.then((theid)=>{\n\t        storedUserId = theid;\n    \t        localStorage.setItem('userId',storedUserId);\n\t\tdispatch(new quickUsrInfoId(theid));\n\n\t    });\n\t    usrinfogen.keypair.then((thekeypair)=>{\n\t        storedPublicKey =thekeypair.publickey;\n\t        storedPrivateKey = thekeypair.privatekey;\n    \t        localStorage.setItem('publicKey',storedPublicKey);\n    \t        localStorage.setItem('privateKey',storedPrivateKey);\n\t\tdispatch(new quickUsrInfoPubkey(storedPublicKey));\n\t\tsetTimeout(() => {\n      \t\t\twindow.location.reload();\n    \t\t}, 1000);\n\t    });\n    }\n\n    // 设置截止接收消息时间\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - 1);\n    const public_cleantimestr = currentDate.toISOString();\n    const public_cleantime = new inCleanTime('public',public_cleantimestr);\n    if(getState().incleantime['public'] === undefined)\n      dispatch(public_cleantime);\n\n    const curDate = new Date();\n    curDate.setDate(curDate.getDate() - 30);\n    const me_cleantimestr = curDate.toISOString();\n    const me_cleantime = new inCleanTime(userId,me_cleantimestr);\n    if(getState().incleantime[userId] === undefined)\n      dispatch(me_cleantime);\n\n}, [pubKey]);\n\n//发送自己频道信息\nuseEffect(() => {\n    if(userId!==undefined && pubKey!==undefined){\n      const u_info = {\n\t id: userId,\n\t pubkey: pubKey\n      }\n      const pubinfo = publisheInfo2Channel(u_info.id,u_info);\n      pubinfo.then((result)=>console.log('update usrinfo to server'));\n    }\n\n}, [pubKey]);\n\n//循环消息体\nuseEffect(() => {\n    var times = 0;\n    const interval = setInterval(() => {\n      //跳过轮询的逻辑\n      skipCount.current  =  skipCount.current + 1;\n      if(userId===undefined && pubKey===undefined){\n\t    return;\n      }\n      var shouldSkipPolling = false;\n      if(lastsendtime !== ''){\n\tconst lastsendDate = new Date(lastsendtime);\n\tconst now = new Date();\n\t// 计算时间差（以毫秒为单位）\n\tconst timeDiff = now.getTime() - lastsendDate.getTime();\n\tconst minutesDiff = Math.floor(timeDiff / (1000 * 60));\n\tif (minutesDiff > 15) \n\t    shouldSkipPolling = true;\n\telse\n\t    shouldSkipPolling = false;\n      }else\n\tshouldSkipPolling = true;\n\t    \n      console.log('\\n');\n      console.log('should skip this: '+shouldSkipPolling);\n      if (shouldSkipPolling && skipCount.current < 3) {\n\tconsole.log('skip this loop ...');\n        return;\n      }\n\n      times=times+1;\n      skipCount.current = 0;\n      console.log('loop ...'+times);\n\n      // 在这里执行接收消息的逻辑\n      const rawlocalList = getState().received;\n      const localList = cloneDeep(rawlocalList);\n      delete localList.public;\n      const oneremotepromise = subscribeChannelOne(userId,0,0);\n      oneremotepromise.then((remotenewone)=>{\n        const mergedLocal = [].concat(...Object.values(localList));\n        const newone =  getA_not_in_B(remotenewone,mergedLocal,'id');\n\tvar needgetall_flag=false;\n\tif(localList===undefined || newone.length>0)\n\t\tneedgetall_flag = true;\n\t\n\tconsole.log('need get all list: '+needgetall_flag);\n\tif(needgetall_flag){\n            const mymsglist = subscribeChannel(userId);//很大的坑 上面useSelector获取的状态不是新的，时常获取到undefined\n\n            mymsglist.then((list)=>{\n              //过滤掉fromid=usrid的就行,这样就不显示自己已经发过了的\n              const rawreceivedlist = list.filter((msg) => msg.fromid !==userId );\n\t      const time_cleanstr = getState().incleantime[userId];\n              let receivedlist;\n              if(time_cleanstr!==undefined){\n                const cleanTime = new Date(time_cleanstr);\n                receivedlist = rawreceivedlist.filter(msg => {\n                        const msgTime = new Date(msg.time);\n                        return msgTime > cleanTime;\n                });\n              }else\n                receivedlist = rawreceivedlist;\n\n\t\t      if(localList===undefined){\n                        console.log('received list get null');\n                        receivedlist.map((msg)=>{\n                          dispatch(new receivedMsg(msg));\n\t\t\t  return msg.id\n                        });\n                      }else{\n                       const filterednewList =  getA_not_in_B(receivedlist,mergedLocal,'id');\n                       filterednewList.map((msg)=>{\n                            if(!itemInList(msg,mergedLocal,'id')){\n                                dispatch(new receivedMsg(msg));\n\t\t\t\tif(msg.fromid !== chatingid){\n\t\t\t\t   console.log('新消息从:'+msg.fromid);\n\t\t\t\t   dispatch(new newAlert(msg.fromid));\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    return msg.id\n                       });\n\n                    }\n\n\t   });\n\t }\n\t //check msg done\n\t\n      });\n    }, parseInt(pollinginterval)*1000); // 每5秒轮询一次\n\n    return () => {\n            // 清除轮询定时器或取消其他轮询相关的操作\n            console.log('Stop polling');\n\t    clearInterval(interval);\n    };\n}, []);\n\n//国际化\nuseEffect(() => {\n    i18n.changeLanguage(systemLanguage.current);\n    document.title = i18n.t('app'); // 设置应用的标题\n}, [systemLanguage]);\n\nreturn (\n<Router>\n<Routes>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/chat/:channelid\" element={<ChatSurface />} />\n</Routes>\n</Router>);\n}\n\nexport default router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store.js';\nimport Router from './Router.js';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport enTranslation from './locales/en.json';\nimport zhTranslation from './locales/zh.json';\n\n// 初始化国际化库\ni18n.use(initReactI18next).init({\n  resources: {\n    en: { translation: enTranslation },\n    zh: { translation: zhTranslation }\n  },\n  lng: 'en', // 设置默认语言\n  fallbackLng: 'en', // 设置fallback语言\n  interpolation: { escapeValue: false }\n});\n\nReactDOM.render(\n<Provider store={store}>\n  <PersistGate loading={null} persistor={persistor}>\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>\n  </PersistGate>\n</Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}